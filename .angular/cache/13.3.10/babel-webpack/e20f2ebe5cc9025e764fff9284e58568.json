{"ast":null,"code":"import { ItemCarrinho } from '../shared/item-carrinho.model';\nimport * as i0 from \"@angular/core\";\nexport let CarrinhoService = /*#__PURE__*/(() => {\n  class CarrinhoService {\n    constructor() {\n      this.itens = [];\n    }\n\n    exibirItens() {\n      return this.itens;\n    }\n\n    incluirItem(oferta) {\n      let itemCarrinho = new ItemCarrinho(oferta.id, oferta.imagens[0], oferta.titulo, oferta.descricaoOferta, oferta.valor, 1); // Verifica se o item já existe no vetor de itens do carrinho\n\n      let itemEncontrado = this.itens.find(item => item.id === itemCarrinho.id);\n\n      if (itemEncontrado) {\n        itemEncontrado.quantidade = itemEncontrado.quantidade + 1;\n      } else {\n        this.itens.push(itemCarrinho);\n      }\n    }\n\n    totalCarrinhoCompras() {\n      let total = 0;\n      this.itens.map(item => {\n        total = total + item.valor * item.quantidade;\n      });\n      return total;\n    }\n\n    adicionarQuantidade(itemCarrinho) {\n      let encontrado = this.itens.find(item => item.id === itemCarrinho.id);\n\n      if (encontrado) {\n        encontrado.quantidade = encontrado.quantidade + 1;\n      }\n    }\n\n    diminuiQuantidade(itemCarrinho) {\n      let encontrado = this.itens.find(item => item.id === itemCarrinho.id);\n\n      if (encontrado) {\n        encontrado.quantidade = encontrado.quantidade - 1;\n\n        if (encontrado.quantidade === 0) {\n          this.itens.splice(this.itens.indexOf(encontrado), 1);\n        }\n      }\n    }\n\n    limparCarrinho() {\n      this.itens = [];\n    }\n\n  }\n\n  CarrinhoService.ɵfac = function CarrinhoService_Factory(t) {\n    return new (t || CarrinhoService)();\n  };\n\n  CarrinhoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CarrinhoService,\n    factory: CarrinhoService.ɵfac\n  });\n  return CarrinhoService;\n})();","map":null,"metadata":{},"sourceType":"module"}